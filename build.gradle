plugins {
    id 'java'
    id 'java-library'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.springframework.boot' version '3.1.2'

    id 'com.google.protobuf' version "0.9.4"
}

dependencies {
    implementation 'org.yaml:snakeyaml'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'com.google.protobuf'

    group = 'com.example'
    version = '0.0.1-SNAPSHOT'

    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    // Enable Java Preview (1)
    compileJava {
        options.compilerArgs += [
                '--enable-preview',
                '-Amapstruct.defaultComponentModel=spring'
        ]

    }

    // Enable Java Preview (2)
    compileTestJava {
        options.compilerArgs += [
                '--enable-preview',
//                '-Amapstruct.defaultComponentModel=spring'
        ]
    }

    // Enable Java Preview (3)
    test {
        useJUnitPlatform()
        jvmArgs([
                '--enable-preview',
//                '-Amapstruct.defaultComponentModel=spring'
                '-Dspring.profiles.active=local'
        ])
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

subprojects {
    dependencies {
        implementation 'org.springframework:spring-web'
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'com.fasterxml.jackson.core:jackson-annotations'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

        // Lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // Logging
        implementation 'org.apache.logging.log4j:log4j-api'
        implementation 'org.apache.logging.log4j:log4j-core'

        // Pageable
        implementation 'org.springframework.data:spring-data-commons'

        // consul
//        implementation 'org.springframework.boot:spring-boot-starter-actuator'
//        implementation 'org.springframework.cloud:spring-cloud-starter-consul-discovery:4.0.2'
    }

}

project(commonModule) {
    dependencies {
        // NTP
        implementation 'commons-net:commons-net:3.9.0'
    }
}

project(globalExceptionHandlerModule) {
    dependencies {
        implementation project(commonModule)
    }
}

project(jpaCoreModule) {
    dependencies {
        implementation project(commonModule)
        api 'org.springframework.boot:spring-boot-starter-data-jpa'
    }
}

project(memberGrpcInterfaceCore) {
    dependencies {
        implementation project(commonModule)
        implementation 'io.grpc:grpc-protobuf:1.57.2'
        implementation 'io.grpc:grpc-stub:1.57.2'
        // never update above 2 (protoBuf task doesn't support jakarta package but supports only javax package)
        compileOnly 'jakarta.annotation:jakarta.annotation-api:1.3.5'
    }
    protobuf {
        protoc {
            artifact = 'com.google.protobuf:protoc:3.24.2'
        }
        generatedFilesBaseDir = "$rootDir/src/generated"
        clean {
            delete generatedFilesBaseDir
        }
        plugins {
            grpc {
                artifact = 'io.grpc:protoc-gen-grpc-java:1.57.2'
            }
        }
        generateProtoTasks {
            all()*.plugins {
                grpc{}
            }
        }
    }

    jar {
        enabled = true
        archiveFileName = "member-grpc-interface.jar"
        destinationDirectory = new File("$rootDir/grpc")
    }
}

project(boardGrpcInterfaceCore) {
    dependencies {
        implementation project(commonModule)
        implementation 'io.grpc:grpc-protobuf:1.57.2'
        implementation 'io.grpc:grpc-stub:1.57.2'
        // never update above 2 (protoBuf task doesn't support jakarta package but supports only javax package)
        compileOnly 'jakarta.annotation:jakarta.annotation-api:1.3.5'
    }
    protobuf {
        protoc {
            artifact = 'com.google.protobuf:protoc:3.24.2'
        }
        generatedFilesBaseDir = "$projectDir/src/generated"
        clean {
            delete generatedFilesBaseDir
        }
        plugins {
            grpc {
                artifact = 'io.grpc:protoc-gen-grpc-java:1.57.2'
            }
        }
        generateProtoTasks {
            all()*.plugins {
                grpc{}
            }
        }
    }

    jar {
        enabled = true
        archiveFileName = "board-grpc-interface.jar"
        destinationDirectory = new File("$rootDir/grpc")
    }
}

// ========================================================================================== member-service
project(memberServiceModule) {
    dependencies {
        api project(commonModule)
        api project(globalExceptionHandlerModule)
        api project(memberApplicationModule)
        api project(memberRdbAdapter)
        api project(memberInternalApi)

        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        // GSON
        testImplementation 'com.google.code.gson:gson:2.10.1'

        api 'net.devh:grpc-client-spring-boot-starter:2.14.0.RELEASE'
        api 'net.devh:grpc-spring-boot-starter:2.14.0.RELEASE'
    }

    bootJar {
        enabled = true
    }
}

project(memberDomain) {
    dependencies {
        implementation project(commonModule)
    }
}

project(memberApplicationModule) {
    dependencies {
        implementation project(commonModule)
        api project(memberDomain)
        api project(memberReadmodels)

        implementation 'org.springframework.security:spring-security-crypto'

        // GSON
        implementation 'com.google.code.gson:gson:2.10.1'
    }
}

project(memberRdbAdapter) {
    dependencies {
        implementation project(commonModule)
        api project(jpaCoreModule)
        api project(memberApplicationModule)

        runtimeOnly 'org.postgresql:postgresql'

        // Map Struct
        implementation 'org.mapstruct:mapstruct:1.5.3.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
        annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

        // Flyway
        implementation 'org.flywaydb:flyway-core'
    }
}

project(memberInternalApi) {
    dependencies {
        implementation project(commonModule)

        implementation 'org.springframework.boot:spring-boot-starter'
    }
}
// ========================================================================================== board-service
project(boardServiceModule) {
    dependencies {
        implementation project(commonModule)
        api project(boardApplicationModule)
//        api project(boardRdbAdapter)
        api project(boardNosqlAdapter)
        api project(boardInternalApiAdapter)
        api project(boardGrpcInterfaceCore)

        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        // GSON
        testImplementation 'com.google.code.gson:gson:2.10.1'

        api 'net.devh:grpc-client-spring-boot-starter:2.14.0.RELEASE'
        api 'net.devh:grpc-spring-boot-starter:2.14.0.RELEASE'
    }

    bootJar {
        enabled = true
    }
}

project(boardDomain) {
    dependencies {
        implementation project(commonModule)
    }
}

project(boardApplicationModule) {
    dependencies {
        implementation project(commonModule)
        api project(boardDomain)
        api project(boardReadModels)

        // GSON
        implementation 'com.google.code.gson:gson:2.10.1'
    }
}

project(boardRdbAdapter) {
    dependencies {
        implementation project(commonModule)
        api project(jpaCoreModule)
        api project(boardApplicationModule)

        runtimeOnly 'org.postgresql:postgresql'

        // Map Struct
        implementation 'org.mapstruct:mapstruct:1.5.3.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
        annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

        // Flyway
        implementation 'org.flywaydb:flyway-core'
    }
}

project(boardNosqlAdapter) {
    dependencies {
        implementation project(commonModule)
        implementation project(boardApplicationModule)

        api 'org.springframework.boot:spring-boot-starter-data-mongodb'

        // Map Struct
        implementation 'org.mapstruct:mapstruct:1.5.3.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
        annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    }
}

project(boardInternalApiAdapter) {
    dependencies {
        implementation project(commonModule)
        api project(boardGrpcInterfaceCore)
        api project(boardApplicationModule)

        implementation 'org.springframework.boot:spring-boot-starter'
        api 'net.devh:grpc-server-spring-boot-starter:2.14.0.RELEASE'
    }
}